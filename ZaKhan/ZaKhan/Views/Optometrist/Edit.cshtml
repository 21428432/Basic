@model ZaKhan.Model.OptometristModel

@{
    ViewBag.Title = "Edit";
}

<link href="~/Content/Site.css" rel="stylesheet" />
<div class="panel panel-default">
    <div class="panel-heading" align="center">
        <h2>Update </h2>
    </div>
<div class="panel-body">


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
           
            <hr/>
            @Html.ValidationSummary(true, "", new {@class = "text-danger"})
            @Html.HiddenFor(model => model.OptometristId)

            <div class="form-group">
                @Html.LabelFor(model => model.LocationId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.LocationId, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.DropDownListFor(x => x.LocationId, (SelectList)ViewData["optometristBranch"], "Select a branch", new { @id = "ddlBranch", Style = "width:250px", htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OptometristName, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OptometristName, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.OptometristName, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Cell, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Cell, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Cell, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Email, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-success"/>
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Cancel and return to List", "Index", "Optometrist", null, new
        {
            @class = "btn btn-warning"
        })
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</div>
</div>