@{
    ViewBag.Title = "View";
}
<link href="~/Content/Site.css" rel="stylesheet" />
<div class="panel panel-default">
    <div class="panel-heading" align="center">
        <h1>Store Directions</h1>
    </div>

@{

    Layout = null;
}
.<!DOCTYPE HTML>
<html>


<head>

<meta name="viewport" content="initial-scale=1.0, user-scalable=no">
<meta charset="utf-8">
<title>Displaying text directions with <code>setPanel()</code></title>
<style>
    html, body, #map-canvas {
        height: 100%;
        margin: 0;
        padding: 0;
    }

    #panel {
        position: absolute;
        top: 5px;
        left: 50%;
        margin-left: -180px;
        z-index: 5;
        background-color: #fff;
        padding: 5px;
        border: 1px solid #999;
    }

    /*
                Provide the following styles for both ID and class,
                where ID represents an actual existing "panel" with
                JS bound to its name, and the class is just non-map
                content that may already have a different ID with
                JS bound to its name.
                */

    #panel, .panel {
        font-family: 'Roboto', 'sans-serif';
        line-height: 30px;
        padding-left: 10px;
    }

    #panel select, #panel input, .panel select, .panel input {
        font-size: 15px;
    }

    #panel select, .panel select {
        width: 100%;
    }

    #panel i, .panel i {
        font-size: 12px;
    }
</style>

<style>
    #directions-panel {
        height: 100%;
        float: right;
        width: 390px;
        overflow: auto;
    }

    #map-canvas {
        margin-right: 400px;
    }

    #control {
        background: #fff;
        padding: 5px;
        font-size: 14px;
        font-family: Arial;
        border: 1px solid #ccc;
        box-shadow: 0 2px 2px rgba(33, 33, 33, 0.4);
        display: none;
    }
/*media code goes here */



                        /*#directions-panel {
                  float: right;
                  width: auto;
                }*/

            </style>


<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&signed_in=true"></script>

<script>


    // In the following example, markers appear when the user clicks on the map.
    // Each marker is labeled with a single alphabetical character.
    var labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
    var labelIndex = 0;
    var map;
    //var chicago = new google.maps.LatLng(41.85, -87.65);
    var chicago = new google.maps.LatLng(-26.20410, 28.04731); //South Africa
    /**
         * The CenterControl adds a control to the map that recenters the map on South afica.
         * This constructor takes the control DIV as an argument.
         *
*/
    function CenterControl(controlDiv, map) {

        // Set CSS for the control border
        var controlUI = document.createElement('div');
        controlUI.style.backgroundColor = '#fff';
        controlUI.style.border = '2px solid #fff';
        controlUI.style.borderRadius = '3px';
        controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)';
        controlUI.style.cursor = 'pointer';
        controlUI.style.marginBottom = '22px';
        controlUI.style.textAlign = 'center';
        controlUI.title = 'Click to recenter the map';
        controlDiv.appendChild(controlUI);

        // Set CSS for the control interior
        var controlText = document.createElement('div');
        controlText.style.color = 'rgb(25,25,25)';
        controlText.style.fontFamily = 'Roboto,Arial,sans-serif';
        controlText.style.fontSize = '16px';
        controlText.style.lineHeight = '38px';
        controlText.style.paddingLeft = '5px';
        controlText.style.paddingRight = '5px';
        controlText.innerHTML = 'Center Map';
        controlUI.appendChild(controlText);

        // Setup the click event listeners: simply set the map to
        //
        google.maps.event.addDomListener(controlUI,
            'click',
            function() {
                map.setCenter(chicago)
            });
    }


    var geocoder;
    var directionsDisplay;
    var directionsService = new google.maps.DirectionsService();

    function initialize() {
        directionsDisplay = new google.maps.DirectionsRenderer();


        var mapDiv = document.getElementById('map-canvas');
        var mapOptions = {
            zoom: 7,
            center: chicago,
            zoomControl: true,
            zoomControlOptions: {
                style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,
                position: google.maps.ControlPosition.BOTTOM_lEFT
            },

        }


        var nncoords = "";
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
                var latitude = position.coords.latitude;
                var longitude = position.coords.longitude;
                var coords = new google.maps.LatLng(latitude, longitude);
                var newcoords = coords.toString().replace('(', '');
                nncoords = newcoords.replace(')', '');
                document.getElementById("mypos").value = nncoords;
                var mapOptions = {
                    map: map,
                    center: nncoords,


                };

                var marker = new google.maps.Marker({
                    map: map,
                    position: nncords
                });
                alert(nncoords);


            });
        } //

        ////Geocoder to enter the address
        //geocoder = new google.maps.Geocoder();
        //document.getElementById('submit').addEventListener('click', function () {
        //    geocodeAddress(geocoder, map);
        //});


        map = new google.maps.Map(mapDiv, mapOptions);
        directionsDisplay.setMap(map);
        directionsDisplay.setPanel(document
            .getElementById('directions-panel')); //panel on the right for the directions to be displayed

        var control = document.getElementById('control');
        control.style.display = 'block';
        map.controls[google.maps.ControlPosition.TOP_CENTER].push(control);

        //Traffic Layer
        var trafficLayer = new google.maps.TrafficLayer();
        trafficLayer.setMap(map);

        // Create the DIV to hold the control and
        // call the CenterControl() constructor passing
        // in this DIV.
        var centerControlDiv = document.createElement('div');
        var centerControl = new CenterControl(centerControlDiv, map);

        centerControlDiv.index = 1;
        map.controls[google.maps.ControlPosition.BOTTOM_LEFT].push(centerControlDiv);
    }

    //geocode to get address
    //geocode
    function codeAddress() {
        var end = document.getElementById('end').value; //address not end, just testing
        geocoder.geocode({ 'end': end },
            function(results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    map.setCenter(results[0].geometry.location);
                    var marker = new google.maps.Marker({
                        map: map,
                        position: results[0].geometry.location
                    });
                } else {
                    alert('Geocode was not successful for the following reason: ' + status);
                }
            });
    } //end of initialize method

    ////Geolocation error
    //  function handleLocationError(browserHasGeolocation, infoWindow, pos) {
    //      infoWindow.setPosition(pos);
    //      infoWindow.setContent(browserHasGeolocation ?
    //                            'Error: The Geolocation service failed.' :
    //                            'Error: Your browser doesn\'t support geolocation.');
    //  }//end Geolocation error


    //directions .... //calculate and display route
    function calcRoute(codeAddress) {
        var start = document.getElementById('mypos').value;
        var end = document.getElementById('start').value;
        var request = {
            origin: start,
            destination: end,
            travelMode: google.maps.TravelMode.DRIVING
        };
        directionsService.route(request,
            function(response, status) {
                if (status == google.maps.DirectionsStatus.OK) {
                    directionsDisplay.setDirections(response);
                } else {
                    window.alert('Directions failed due to' + status);
                }
            });
    }

    google.maps.event.addDomListener(window, 'load', initialize);

</script>
</head>
<body>

<div>
    <b>Navigate To:</b>
    <input id="start" type="textbox" value="@(ViewBag.Map)" readonly="readonly"/>
</div>
    <br/>
<div>
    @Html.ActionLink("Cancel and return to List", "Index", "StoreLocation", null, new
                    {
                        @class = "btn btn-success"
                    })
</div>
    <br />
<div id="control" class="panel">
</div>
    <br />
<div id="geocode-panel">
    <input id="mypos" type="hidden"/>
    <input id="button1" type="button" value="Navigate" onclick=" calcRoute(); " class="btn btn-success"/>

</div>

<div id="directions-panel" class="panel"></div>
<div id="map-canvas"></div>
</body>
</html>
</div>
