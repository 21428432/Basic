@model ZaKhan.Model.Products.ProductView

@{
    ViewBag.Title = "Create";
}
<link href="~/Content/Site.css" rel="stylesheet" />
<div class="panel panel-default">
    <div class="panel-heading" align="center">
        <h2>Create</h2>
    </div>
    <div class="panel-body">

        @using (Html.BeginForm("Create", "Product", FormMethod.Post, new {enctype = "multipart/form-data"}))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                
                <hr/>
                @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.price, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.price, new {htmlAttributes = new {@class = "form-control", @placeholder = "R0.00"}})
                        @Html.ValidationMessageFor(model => model.price, "", new {@class = "text-danger"})
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SerialCode, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SerialCode, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.SerialCode, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ProdCategoryView, "Category Name", htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.DropDownList("CategoryId", null, "--Select--", new {style = "width:200px;", @class = "form-control"})
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new {@class = "text-danger"})
                        @*<label class="text-danger">@ViewBag.error</label>*@
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProdBrandView, "Brand Name", htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.DropDownList("BrandId", null, "--Select--", new {style = "width:200px;", @class = "form-control"})
                        @Html.ValidationMessageFor(model => model.BrandId, "", new {@class = "text-danger"})
                        @*<label class="text-danger">@ViewBag.error2</label>*@
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })*@
                        <input type="file" name="file"/>
                        @Html.ValidationMessageFor(model => model.ImageUrl, "", new {@class = "text-danger"})
                    </div>
                </div>

                @*<div class="form-group">
                        @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CategoryId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BrandId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BrandId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BrandId, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-success"/>
                    </div>
                </div>
            </div>
        }
        <br/>
        <div>
            @Html.ActionLink("Cancel and return to List", "Index","Product", null, new
                    {
                        @class = "btn btn-warning"
                    })
        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
    </div>
</div>